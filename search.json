[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/NEWS.html","id":"openoise-0-2-16","dir":"Articles","previous_headings":"","what":"OpeNoise 0.2-16","title":"NEWS","text":"Fix bugs avg.day.night function Add AcuDNPercentile function","code":""},{"path":"/articles/NEWS.html","id":"openoise-0-2-15","dir":"Articles","previous_headings":"","what":"OpeNoise 0.2-15","title":"NEWS","text":"Fix bugs AcousticQuantilePlot function Add dbSum function Add SELcalc function Update vignette","code":""},{"path":"/articles/NEWS.html","id":"openoise-0-2-13","dir":"Articles","previous_headings":"","what":"OpeNoise 0.2-13","title":"NEWS","text":"Add new function AcousticQuantilePlot Add data AcousticWeightingTable","code":""},{"path":"/articles/NEWS.html","id":"openoise-0-2-12","dir":"Articles","previous_headings":"","what":"OpeNoise 0.2-12","title":"NEWS","text":"Add new colour/aspect PlotSpectogram function Add na.omit HourlyEmean function search.tone function modified (time indipendent) Correct bugs LdenCalculator function Add qualitative flag IntrusivityIndex function Add new column “BWn” (letterature values) table dfBW","code":""},{"path":"/articles/NEWS.html","id":"openoise-0-2-11","dir":"Articles","previous_headings":"","what":"OpeNoise 0.2-11","title":"NEWS","text":"Add argument dataset ExtractIndex MarkApply function Shiny application","code":""},{"path":"/articles/NEWS.html","id":"openoise-0-2-10","dir":"Articles","previous_headings":"","what":"OpeNoise 0.2-10","title":"NEWS","text":"Add argument timeZone HourlyEmean","code":""},{"path":"/articles/NEWS.html","id":"openoise-0-2-9","dir":"Articles","previous_headings":"","what":"OpeNoise 0.2-9","title":"NEWS","text":"Changed library name AcousticCalc OpeNoise fixed bug search.tone function fixed several minor bug Added function searchImpulse Added function dfImpulsiveTransform Added function IntrusiveIndex","code":""},{"path":"/articles/NEWS.html","id":"acousticcalc-0-2-7","dir":"Articles","previous_headings":"","what":"AcousticCalc 0.2-7","title":"NEWS","text":"Added new functions total 20 functions. Added 7 example dataset. Added documentation.","code":""},{"path":"/articles/OpeNoise-vignette.html","id":"introdution","dir":"Articles","previous_headings":"","what":"Introdution","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"tutorial explains use OpeNoise library. works acoustic data acquired sound level meters instrument. Input dataset format showed internal examples can access data() function.","code":"library(OpeNoise)  data(\"PTFA\")  head(PTFA)[1:3, 1:6] #>                  date LAeq LZFmin.6.3 LZFmin.8.0 LZFmin.10.0 LZFmin.12.5 #> 2 2022-03-07 10:12:16 43.9       31.6       34.7        59.9        74.1 #> 3 2022-03-07 10:12:17 44.6       33.7       43.9        59.6        58.9 #> 4 2022-03-07 10:12:18 44.5       46.0       52.2        51.3        57.2"},{"path":[]},{"path":"/articles/OpeNoise-vignette.html","id":"energetic-average","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"Energetic average","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"Function calculate energetic average vector values dB. RoundTo function round value 0.5.","code":"energetic.mean(PTFA$LAeq) #> [1] 45.7 x <- energetic.mean(PTFA$LAeq)  RoundTo(x, 0.5) #> [1] 45.5"},{"path":"/articles/OpeNoise-vignette.html","id":"energetic-average-weighted","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"Energetic average weighted","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"Function calculate energetic average weighted vector’s values dB respect vector’s time like string format “HH:MM:SS”","code":"energetic_w.mean(c(55.2, 88.6), c(\"03:22:52\", \"08:55:33\")) #> [1] 87.2"},{"path":"/articles/OpeNoise-vignette.html","id":"acoustic-percentile","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"Acoustic percentile","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"Function return reverse percentile un vector’s values.","code":"AcuPercentile(PTFA$LAeq) #>     L1     L5    L10    L50    L90    L95    L99  #> 53.747 48.600 47.200 44.400 43.100 43.000 42.700 RoundTo(AcuPercentile(PTFA$LAeq), 0.5) #>   L1   L5  L10  L50  L90  L95  L99  #> 53.5 48.5 47.0 44.5 43.0 43.0 42.5"},{"path":"/articles/OpeNoise-vignette.html","id":"day-and-night-acoustic-percentiles-calculate","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"Day and night acoustic percentiles calculate","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"","code":"data(\"exampleHourlyData\")  AcuDNPercentile(df = exampleHourlyData,                 parameter = \"leq\",                 from = \"5\",                 to = \"22\",                 period = \"night\") #> [[1]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.767 72.235 70.940 69.550 51.950 51.420 50.204  #>  #> [[2]] #>     L1     L5    L10    L50    L90    L95    L99  #> 71.448 70.840 70.620 69.850 50.750 48.425 47.285  #>  #> [[3]] #>     L1     L5    L10    L50    L90    L95    L99  #> 71.843 71.615 71.060 69.550 52.250 50.770 48.794  #>  #> [[4]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.656 72.080 71.280 70.000 52.560 51.350 49.550  #>  #> [[5]] #>     L1     L5    L10    L50    L90    L95    L99  #> 70.770 70.650 70.500 69.600 51.450 49.575 48.795  #>  #> [[6]] #>     L1     L5    L10    L50    L90    L95    L99  #> 73.424 71.120 70.640 69.500 64.180 62.990 60.758  #>  #> [[7]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.326 71.405 70.710 69.800 51.700 50.160 46.912  #>  #> [[8]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.554 70.940 70.710 69.050 52.490 49.465 44.826  #>  #> [[9]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.089 71.730 70.260 68.450 56.730 51.305 48.122  #>  #> [[10]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.459 71.350 70.530 69.700 52.270 51.310 48.403  #>  #> [[11]] #>     L1     L5    L10    L50    L90    L95    L99  #> 74.300 72.560 72.240 69.700 55.300 48.100 46.224  #>  #> [[12]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.944 72.160 71.200 69.100 51.260 48.740 47.148  #>  #> [[13]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.352 71.430 70.340 69.000 53.180 48.400 46.048  #>  #> [[14]] #>     L1     L5    L10    L50    L90    L95    L99  #> 73.914 72.450 71.100 69.600 53.020 50.250 48.922  #>  #> [[15]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.505 71.915 71.000 69.450 51.940 50.995 48.718  #>  #> [[16]] #>     L1     L5    L10    L50    L90    L95    L99  #> 73.000 72.705 71.050 69.050 52.930 49.645 48.354  #>  #> [[17]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.735 70.510 70.400 69.450 51.190 50.375 48.103  #>  #> [[18]] #>     L1     L5    L10    L50    L90    L95    L99  #> 73.132 70.545 70.360 69.400 52.110 51.115 48.411  #>  #> [[19]] #>     L1     L5    L10    L50    L90    L95    L99  #> 74.769 72.745 72.010 69.250 51.260 49.870 48.508  #>  #> [[20]] #>     L1     L5    L10    L50    L90    L95    L99  #> 73.424 71.340 70.840 68.500 52.540 49.540 47.628  #>  #> [[21]] #>     L1     L5    L10    L50    L90    L95    L99  #> 74.712 72.500 71.490 69.100 50.200 48.905 47.741  #>  #> [[22]] #>     L1     L5    L10    L50    L90    L95    L99  #> 75.096 73.020 71.980 69.500 58.240 50.740 49.312  #>  #> [[23]] #>     L1     L5    L10    L50    L90    L95    L99  #> 73.052 71.640 70.200 68.500 51.560 49.670 46.154  #>  #> [[24]] #>     L1     L5    L10    L50    L90    L95    L99  #> 75.792 70.910 69.960 67.600 50.860 48.320 47.654  #>  #> [[25]] #>     L1     L5    L10    L50    L90    L95    L99  #> 70.846 70.100 69.800 66.100 51.120 49.490 47.144  #>  #> [[26]] #>     L1     L5    L10    L50    L90    L95    L99  #> 73.746 71.805 70.620 69.050 53.390 49.355 46.329  #>  #> [[27]] #>     L1     L5    L10    L50    L90    L95    L99  #> 74.186 72.120 70.660 68.850 52.170 50.420 45.038  #>  #> [[28]] #>     L1     L5    L10    L50    L90    L95    L99  #> 70.648 70.310 70.140 69.300 52.880 49.780 48.266  #>  #> [[29]] #>     L1     L5    L10    L50    L90    L95    L99  #> 71.575 70.175 69.750 68.700 50.100 48.400 44.525  #>  #> [[30]] #>     L1     L5    L10    L50    L90    L95    L99  #> 71.496 69.820 69.500 67.300 56.100 51.740 50.644  #>  #> [[31]] #>     L1     L5    L10    L50    L90    L95    L99  #> 68.536 68.280 67.960 64.200 57.800 57.200 56.720"},{"path":"/articles/OpeNoise-vignette.html","id":"energetic-hourly-average","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"Energetic hourly average","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"Function return energetic average hourly aggregation.","code":"HourlyEmean(PTFA, \"LAeq\", timeZone = \"Europe/Rome\") #>            date LAeq #> 1 2022-03-07 10 45.7"},{"path":"/articles/OpeNoise-vignette.html","id":"time-decomposition","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"Time decomposition","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"function retun seconds hour, minutes seconds.","code":"hour <- 5 minute <- 25 second <- 50 deco.time(hour, minute, second) #> [1] \"Time decomposition from hours, minutes and seconds to seconds:\" #> [1] 19550"},{"path":"/articles/OpeNoise-vignette.html","id":"holidays-date-gregorian-calendar","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"holidays date (Gregorian calendar)","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"simple function using Gauss’algorithm return holiday date respect Gregorian calendar.","code":"HolidaysDate(2022) #> [1] \"2022-01-01\" \"2022-01-06\" \"2022-04-25\" \"2022-05-01\" \"2022-06-02\" #> [6] \"2022-08-15\" \"2022-11-01\" \"2022-04-17\" \"2022-04-18\""},{"path":"/articles/OpeNoise-vignette.html","id":"average-daynight-period-06002100---22000500","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"Average day/night period (06:00/21:00 - 22:00/05:00)","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"Function return energetic average simple average aggregation day (06:00/21:00) night (22:00/05:00).","code":"data(\"exampleHourlyData\")  df_night <- avr.day.night(exampleHourlyData, variable = \"leq\", period = \"night\",                stat = \"e_mean\")  head(df_night, 5) #>         DATA MEAN  MIN  MAX #> 1 2020-12-11 56.1 46.9 60.3 #> 2 2020-12-12 54.9 46.5 60.0 #> 3 2020-12-13 56.5 46.3 61.5 #> 4 2020-12-14 56.5 48.4 61.3 #> 5 2020-12-15 56.9 48.6 62.4 df_day <- avr.day.night(exampleHourlyData, variable = \"leq\", period = \"day\",                stat = \"e_mean\")  head(df_day, 5) #>         DATA MEAN  MIN  MAX #> 1 2020-12-11 69.9 64.9 72.3 #> 2 2020-12-12 69.4 63.4 72.6 #> 3 2020-12-13 69.0 60.2 72.1 #> 4 2020-12-14 69.6 64.1 73.2 #> 5 2020-12-15 69.7 64.2 72.9"},{"path":"/articles/OpeNoise-vignette.html","id":"lden-calculation","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"Lden calculation","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"function return energetic average aggregate: D_acu (day 06:00/21:00) D (day 06:00/20:00) E (Evening 20:00/22:00) N (Night 22:00/06:00) Lden (level noise day-evening-night indicator correlated global nuisance produced noise overall 24 hours)","code":"data(\"exampleHourlyData\")  LdenCalculator(dataframe = exampleHourlyData, variable = \"leq\", type = \"daily\") #> # A tibble: 81 × 6 #>    date       D_acu     D     E     N  Lden #>    <fct>      <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 2020-12-11  69.9  70.4  66    NA    NA   #>  2 2020-12-12  69.4  69.7  65.6  56.1  68.9 #>  3 2020-12-13  69    69.3  65.4  54.9  68.4 #>  4 2020-12-14  69.6  70    64.9  56.5  69.1 #>  5 2020-12-15  69.7  70.1  65.1  56.5  69.2 #>  6 2020-12-16  70.3  70.7  65.4  56.9  69.7 #>  7 2020-12-17  70.1  70.5  65.9  57.4  69.7 #>  8 2020-12-18  69.6  69.8  66.7  57.2  69.3 #>  9 2020-12-19  69.1  69.4  66.1  56.6  68.9 #> 10 2020-12-20  69.2  69.5  66.5  54.7  68.7 #> # ℹ 71 more rows LdenCalculator(dataframe = exampleHourlyData, variable = \"leq\", type = \"total\") #> # A tibble: 1 × 4 #>       D     E     N  Lden #>   <dbl> <dbl> <dbl> <dbl> #> 1  69.8  66.3  57.6  69.4"},{"path":"/articles/OpeNoise-vignette.html","id":"dbsum","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"dbsum","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"Function calculate energetic sum difference values","code":"dbsum(x = 55, y = 33, operator = 1) #> [1] 55.02732 dbsum(x = c(55 , 66), y = c(45, 50), operator = 1) #> [1] 55.41393 66.10774 dbsum(x = c(55 , 66), y = c(70, 68), operator = -1) #> [1] NaN NaN"},{"path":"/articles/OpeNoise-vignette.html","id":"selcalc","dir":"Articles","previous_headings":"Acoustic summary calculation","what":"SELcalc","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"Function calculate SEL (single envent level)","code":"SELcalc(x = 66.8, t = 938) #> [1] 96.52203"},{"path":"/articles/OpeNoise-vignette.html","id":"plot-functions-time-history-and-running-leq-spectrogram-quantile-plot","dir":"Articles","previous_headings":"","what":"Plot functions (time history and Running Leq, spectrogram, quantile plot)","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"PlotNoiseTHcompare function shows Leq’s time history frequency components   AcousticQuantilePlot function plot acoustic quantile aggregate hour","code":"PlotNoiseTimeHistory(df = PTFA, mp = \"PTFA\", y_lim = c(40, 60)) PlotNoiseTHcompare(df = PTFA,                     variable = \"LAeq\",                     listvar = c(\"LZFmin.100\",                                \"LZFmin.40.0\"),                    mp = \"PTFA\",                     runleq = FALSE) PlotSpectrogram(PTFA, coLs = c(3:38), plot_title = \"Spectrogram\") library(lubridate) #>  #> Attaching package: 'lubridate' #> The following objects are masked from 'package:base': #>  #>     date, intersect, setdiff, union datasetI <- dataset_impulsive1 datasetH <- dfImpulsiveTrasform(datasetI) datasetH$date <- ymd_hms(as.character(datasetH$date))  AcousticQuantilePlot(df = datasetH, Cols =c(3:38), Quantile =0.95,                      TimeZone = \"UTC\")"},{"path":"/articles/OpeNoise-vignette.html","id":"search-tone","dir":"Articles","previous_headings":"","what":"Search tone","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"function search tonal components acoustic measure","code":"search.tone(PTFA[, c(3:38)], statistic = energetic.mean, plot.tone = T)"},{"path":"/articles/OpeNoise-vignette.html","id":"impulsive-finder","dir":"Articles","previous_headings":"","what":"Impulsive finder","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"function search impulsive events acoustic measure","code":"data(\"dataset_impulsive2\") results <- searchImpulse(dataset_impulsive2) results$dfPeaks #>    ymax xmax startPeak stopPeak                date cri1 cri2 #> 1  97.2 2795      2794     2818 2022-05-06 14:30:54    y    5 #> 2  96.3 2595      2594     2622 2022-05-06 14:30:34    y    5 #> 3  96.1 1570      1564     1591 2022-05-06 14:28:51    y    4 #> 4  91.1 1978      1977     2000 2022-05-06 14:29:32    y    5 #> 5  91.0 1773      1771     1794 2022-05-06 14:29:11    y    5 #> 6  90.9 2401      2397     2420 2022-05-06 14:30:14    y    4 #> 7  90.2 1159      1158     1183 2022-05-06 14:28:10    y    5 #> 8  90.2 1389      1387     1410 2022-05-06 14:28:33    y    5 #> 9  88.8 2198      2197     2218 2022-05-06 14:29:54    y    4 #> 10 86.7  939       936      959 2022-05-06 14:27:48    y    5"},{"path":"/articles/OpeNoise-vignette.html","id":"transform-dataset-from-100-ms-data-acquisition-to-1-s-data-acquisition","dir":"Articles","previous_headings":"Impulsive finder","what":"Transform dataset from 100 ms data acquisition to 1 s data acquisition","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"","code":"data(\"dataset_impulsive2\") head(dataset_impulsive2, 3)[, 1:5] #>                      date LAeq LASmax  LAF LAFmax #> 2 2022-05-06 14:26:14.600 34.8   40.4 34.5   34.8 #> 3 2022-05-06 14:26:14.700 35.0   40.1 34.6   35.1 #> 4 2022-05-06 14:26:14.800 37.0   39.8 35.7   36.2 dfT <- dfImpulsiveTrasform(dfImpulsive = dataset_impulsive2,                             statistic = energetic.mean) head(dfT, 3)[, 1:5] #>                    date LAeq LZeq.6.3 LZeq.8.0 LZeq.10.0 #> 1 2022-05-06 14:26:14.6 34.8     29.4     37.5      43.7 #> 2 2022-05-06 14:26:14.7 35.0     31.5     34.9      38.5 #> 3 2022-05-06 14:26:14.8 37.0     28.2     37.1      35.2"},{"path":"/articles/OpeNoise-vignette.html","id":"calculation-of-the-intrusiveness-index","dir":"Articles","previous_headings":"","what":"Calculation of the intrusiveness index","title":"Tutorial OpeNoise 0.2-16 ![](hex-OpeNoise.png){height=75 align=right}","text":"","code":"library(OpeNoise) library(lubridate)  data(\"dataset_impulsive1\") data(\"dfBW\")  # dataset handling df_Imp_sec <- dfImpulsiveTrasform(dataset_impulsive1,                                   statistic = energetic.mean) df_Imp_sec$date <- ymd_hms(df_Imp_sec$date, tz = \"Europe/Rome\")  # extraction of frequency bands from the dataset freqDF <- df_Imp_sec[, grep(\"LZeq\\\\.\", names(df_Imp_sec))]  ################################################################################  #                  INTRUSIVENESS INDEX CALCULATION FUNCTION  ################################################################################ dfa <- freqDF # Environmental dataset simulation dfr <- freqDF  # Residual dataset simulation by subtracting 4 from dfa dfr[c(5,8,12,15), ] <- dfr[c(5,8,12,15), ] - 4  BW <- dfBW$BW # bandwidth  # application of the function IntrusiveIndex(dfa, dfr, BW) #> [1] \"10 Intrusivity Index is negligible\""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pasquale Scordino. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Scordino P, Sperotto S, Masera S, Grasso D, Fogola J (2024). OpeNoise: Environmental Noise Pollution Data Analysis. R package version 0.2-17, https://github.com/Arpapiemonte/openoise-analysis.","code":"@Manual{,   title = {OpeNoise: Environmental Noise Pollution Data Analysis},   author = {Pasquale Scordino and Simone Sperotto and Stefano Masera and Daniele Grasso and Jacopo Fogola},   year = {2024},   note = {R package version 0.2-17},   url = {https://github.com/Arpapiemonte/openoise-analysis}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Environmental Noise Pollution Data Analysis","text":"development version can installed GitHub. Installation OpeNoise GitHub easy using devtools package.","code":"# install.packages(\"devtools\") devtools::install_github(\"Arpapiemonte/openoise-analysis\")"},{"path":"/index.html","id":"introdution","dir":"","previous_headings":"","what":"Introdution","title":"Environmental Noise Pollution Data Analysis","text":"tutorial explains use OpeNoise library. works acoustic data acquired sound level meters instrument. Input dataset format showed internal examples can access data() function.","code":"library(OpeNoise)  data(\"PTFA\")  head(PTFA)[1:3, 1:6] #>                  date LAeq LZFmin.6.3 LZFmin.8.0 LZFmin.10.0 LZFmin.12.5 #> 2 2022-03-07 10:12:16 43.9       31.6       34.7        59.9        74.1 #> 3 2022-03-07 10:12:17 44.6       33.7       43.9        59.6        58.9 #> 4 2022-03-07 10:12:18 44.5       46.0       52.2        51.3        57.2"},{"path":[]},{"path":"/index.html","id":"energetic-average","dir":"","previous_headings":"Acoustic summary calculation:","what":"Energetic average","title":"Environmental Noise Pollution Data Analysis","text":"Function calculate energetic average vector values dB. RoundTo function round value 0.5.","code":"energetic.mean(PTFA$LAeq) #> [1] 45.7 x <- energetic.mean(PTFA$LAeq)  RoundTo(x, 0.5) #> [1] 45.5"},{"path":"/index.html","id":"energetic-average-weighted","dir":"","previous_headings":"Acoustic summary calculation:","what":"Energetic average weighted","title":"Environmental Noise Pollution Data Analysis","text":"Function calculate energetic average weighted vector’s values dB respect vector’s time like string format “HH:MM:SS”","code":"energetic_w.mean(c(55.2, 88.6), c(\"03:22:52\", \"08:55:33\")) #> [1] 87.2"},{"path":"/index.html","id":"acoustic-percentile","dir":"","previous_headings":"Acoustic summary calculation:","what":"Acoustic percentile","title":"Environmental Noise Pollution Data Analysis","text":"Function return reverse percentile un vector’s values.","code":"AcuPercentile(PTFA$LAeq) #>     L1     L5    L10    L50    L90    L95    L99  #> 53.747 48.600 47.200 44.400 43.100 43.000 42.700 RoundTo(AcuPercentile(PTFA$LAeq), 0.5) #>   L1   L5  L10  L50  L90  L95  L99  #> 53.5 48.5 47.0 44.5 43.0 43.0 42.5"},{"path":"/index.html","id":"day-and-night-acoustic-percentiles-calculate","dir":"","previous_headings":"Acoustic summary calculation:","what":"Day and night acoustic percentiles calculate","title":"Environmental Noise Pollution Data Analysis","text":"","code":"data(\"exampleHourlyData\")  AcuDNPercentile(df = exampleHourlyData,                 parameter = \"leq\",                 from = \"5\",                 to = \"22\",                 period = \"night\")[1:5] #> [[1]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.767 72.235 70.940 69.550 51.950 51.420 50.204  #>  #> [[2]] #>     L1     L5    L10    L50    L90    L95    L99  #> 71.448 70.840 70.620 69.850 50.750 48.425 47.285  #>  #> [[3]] #>     L1     L5    L10    L50    L90    L95    L99  #> 71.843 71.615 71.060 69.550 52.250 50.770 48.794  #>  #> [[4]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.656 72.080 71.280 70.000 52.560 51.350 49.550  #>  #> [[5]] #>     L1     L5    L10    L50    L90    L95    L99  #> 70.770 70.650 70.500 69.600 51.450 49.575 48.795"},{"path":"/index.html","id":"energetic-hourly-average","dir":"","previous_headings":"Acoustic summary calculation:","what":"Energetic hourly average","title":"Environmental Noise Pollution Data Analysis","text":"Function return energetic average hourly aggregation.","code":"HourlyEmean(PTFA, \"LAeq\", timeZone = \"Europe/Rome\") #>            date LAeq #> 1 2022-03-07 10 45.7"},{"path":"/index.html","id":"time-decomposition","dir":"","previous_headings":"Acoustic summary calculation:","what":"Time decomposition","title":"Environmental Noise Pollution Data Analysis","text":"function retun seconds hour, minutes seconds.","code":"hour <- 5 minute <- 25 second <- 50 deco.time(hour, minute, second) #> [1] \"Time decomposition from hours, minutes and seconds to seconds:\" #> [1] 19550"},{"path":"/index.html","id":"holidays-date-gregorian-calendar","dir":"","previous_headings":"Acoustic summary calculation:","what":"holidays date (Gregorian calendar)","title":"Environmental Noise Pollution Data Analysis","text":"simple function using Gauss’algorithm return holiday date according Gregorian calendar.","code":"HolidaysDate(2024) #> [1] \"2024-01-01\" \"2024-01-06\" \"2024-04-25\" \"2024-05-01\" \"2024-06-02\" #> [6] \"2024-08-15\" \"2024-11-01\" \"2024-03-31\" \"2024-04-01\""},{"path":"/index.html","id":"average-daynight-period-06002200---22000600","dir":"","previous_headings":"Acoustic summary calculation:","what":"Average day/night period (06:00/22:00 - 22:00/06:00)","title":"Environmental Noise Pollution Data Analysis","text":"Function return energetic average simple average aggregation day (06:00/22:00) night (22:00/06:00).","code":"data(\"exampleHourlyData\")  df_night <- avr.day.night(exampleHourlyData, variable = \"leq\", period = \"night\",                stat = \"e_mean\")  head(df_night, 5) #>         DATA MEAN  MIN  MAX #> 1 2020-12-11 56.1 46.9 60.3 #> 2 2020-12-12 54.9 46.5 60.0 #> 3 2020-12-13 56.5 46.3 61.5 #> 4 2020-12-14 56.5 48.4 61.3 #> 5 2020-12-15 56.9 48.6 62.4 df_day <- avr.day.night(exampleHourlyData, variable = \"leq\", period = \"day\",                stat = \"e_mean\")  head(df_day, 5) #>         DATA MEAN  MIN  MAX #> 1 2020-12-11 69.9 64.9 72.3 #> 2 2020-12-12 69.4 63.4 72.6 #> 3 2020-12-13 69.0 60.2 72.1 #> 4 2020-12-14 69.6 64.1 73.2 #> 5 2020-12-15 69.7 64.2 72.9"},{"path":"/index.html","id":"lden-calculation","dir":"","previous_headings":"Acoustic summary calculation:","what":"Lden calculation","title":"Environmental Noise Pollution Data Analysis","text":"function return energetic average aggregate: D_acu (day 06:00/22:00) D (day 06:00/20:00) E (Evening 20:00/22:00) N (Night 22:00/06:00) Lden (level noise day-evening-night indicator correlated global nuisance produced noise overall 24 hours)","code":"data(\"exampleHourlyData\")  LdenCalculator(dataframe = exampleHourlyData, variable = \"leq\", type = \"daily\") #> # A tibble: 81 × 6 #>    date       D_acu     D     E     N  Lden #>    <fct>      <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 2020-12-11  69.9  70.4  66    NA    NA   #>  2 2020-12-12  69.4  69.7  65.6  56.1  68.9 #>  3 2020-12-13  69    69.3  65.4  54.9  68.4 #>  4 2020-12-14  69.6  70    64.9  56.5  69.1 #>  5 2020-12-15  69.7  70.1  65.1  56.5  69.2 #>  6 2020-12-16  70.3  70.7  65.4  56.9  69.7 #>  7 2020-12-17  70.1  70.5  65.9  57.4  69.7 #>  8 2020-12-18  69.6  69.8  66.7  57.2  69.3 #>  9 2020-12-19  69.1  69.4  66.1  56.6  68.9 #> 10 2020-12-20  69.2  69.5  66.5  54.7  68.7 #> # ℹ 71 more rows LdenCalculator(dataframe = exampleHourlyData, variable = \"leq\", type = \"total\") #> # A tibble: 1 × 4 #>       D     E     N  Lden #>   <dbl> <dbl> <dbl> <dbl> #> 1  69.8  66.3  57.6  69.4"},{"path":"/index.html","id":"dbsum","dir":"","previous_headings":"Acoustic summary calculation:","what":"dbsum","title":"Environmental Noise Pollution Data Analysis","text":"Function calculate energetic sum difference values","code":"dbsum(x = 55, y = 33, operator = 1) #> [1] 55.02732 dbsum(x = c(55 , 66), y = c(45, 50), operator = 1) #> [1] 55.41393 66.10774 dbsum(x = c(70 , 68), y = c(55, 66), operator = -1) #> [1] 69.86045 63.67077"},{"path":"/index.html","id":"selcalc","dir":"","previous_headings":"Acoustic summary calculation:","what":"SELcalc","title":"Environmental Noise Pollution Data Analysis","text":"Function calculate SEL (single event level)","code":"SELcalc(x = 66.8, t = 938) #> [1] 96.52203"},{"path":"/index.html","id":"plot-functions-time-history-and-running-leq-spectrogram-quantile-plot","dir":"","previous_headings":"","what":"Plot functions (time history and Running Leq, spectrogram, quantile plot)","title":"Environmental Noise Pollution Data Analysis","text":"PlotNoiseTHcompare function shows Leq’s time history frequency components   AcousticQuantilePlot function plot acoustic quantile aggregate hour","code":"PlotNoiseTimeHistory(df = PTFA, variable = \"LAeq\", mp = \"PTFA\", y_lim = c(40, 60)) PlotNoiseTHcompare(df = PTFA,                     variable = \"LAeq\",                     listvar = c(\"LZFmin.100\",                                \"LZFmin.40.0\"),                    mp = \"PTFA\",                     runleq = FALSE) PlotSpectrogram(PTFA, coLs = c(3:38), plot_title = \"Spectrogram\") library(lubridate)  datasetI <- dataset_impulsive1 datasetH <- dfImpulsiveTrasform(datasetI) datasetH$date <- ymd_hms(as.character(datasetH$date))  AcousticQuantilePlot(df = datasetH, Cols =c(3:38), Quantile =0.95,                      TimeZone = \"UTC\")"},{"path":"/index.html","id":"search-tone","dir":"","previous_headings":"","what":"Search tone","title":"Environmental Noise Pollution Data Analysis","text":"function search tonal components acoustic measure according Italian law.","code":"search.tone(PTFA[, c(3:38)], statistic = energetic.mean, plot.tone = T)"},{"path":"/index.html","id":"impulsive-finder","dir":"","previous_headings":"","what":"Impulsive finder","title":"Environmental Noise Pollution Data Analysis","text":"function search impulsive events acoustic measure","code":"data(\"dataset_impulsive2\") results <- searchImpulse(dataset_impulsive2) results$dfPeaks #>    ymax xmax startPeak stopPeak                date cri1 cri2 #> 1  97.2 2795      2794     2818 2022-05-06 14:30:54    y    5 #> 2  96.3 2595      2594     2622 2022-05-06 14:30:34    y    5 #> 3  96.1 1570      1564     1591 2022-05-06 14:28:51    y    4 #> 4  91.1 1978      1977     2000 2022-05-06 14:29:32    y    5 #> 5  91.0 1773      1771     1794 2022-05-06 14:29:11    y    5 #> 6  90.9 2401      2397     2420 2022-05-06 14:30:14    y    4 #> 7  90.2 1159      1158     1183 2022-05-06 14:28:10    y    5 #> 8  90.2 1389      1387     1410 2022-05-06 14:28:33    y    5 #> 9  88.8 2198      2197     2218 2022-05-06 14:29:54    y    4 #> 10 86.7  939       936      959 2022-05-06 14:27:48    y    5 results$Plot"},{"path":"/index.html","id":"transform-dataset-from-100-ms-data-acquisition-to-1-s-data-acquisition","dir":"","previous_headings":"Impulsive finder","what":"Transform dataset from 100 ms data acquisition to 1 s data acquisition","title":"Environmental Noise Pollution Data Analysis","text":"","code":"data(\"dataset_impulsive2\") head(dataset_impulsive2, 3)[, 1:5] #>                      date LAeq LASmax  LAF LAFmax #> 2 2022-05-06 14:26:14.600 34.8   40.4 34.5   34.8 #> 3 2022-05-06 14:26:14.700 35.0   40.1 34.6   35.1 #> 4 2022-05-06 14:26:14.800 37.0   39.8 35.7   36.2 dfT <- dfImpulsiveTrasform(dfImpulsive = dataset_impulsive2,                             statistic = energetic.mean) head(dfT, 3)[, 1:5] #>                    date LAeq LZeq.6.3 LZeq.8.0 LZeq.10.0 #> 1 2022-05-06 14:26:14.6 34.8     29.4     37.5      43.7 #> 2 2022-05-06 14:26:14.7 35.0     31.5     34.9      38.5 #> 3 2022-05-06 14:26:14.8 37.0     28.2     37.1      35.2"},{"path":"/index.html","id":"calculation-of-the-intrusiveness-index","dir":"","previous_headings":"","what":"Calculation of the intrusiveness index","title":"Environmental Noise Pollution Data Analysis","text":"","code":"library(OpeNoise) library(lubridate)  data(\"dataset_impulsive1\") data(\"dfBW\")  # dataset handling df_Imp_sec <- dfImpulsiveTrasform(dataset_impulsive1,                                   statistic = energetic.mean) df_Imp_sec$date <- ymd_hms(df_Imp_sec$date, tz = \"Europe/Rome\")  # extraction of frequency bands from the dataset freqDF <- df_Imp_sec[, grep(\"LZeq\\\\.\", names(df_Imp_sec))]  ################################################################################ #                  INTRUSIVENESS INDEX CALCULATION FUNCTION ################################################################################ dfa <- freqDF # Environmental dataset simulation dfr <- freqDF  # Residual dataset simulation by subtracting 4 from dfa dfr[c(5,8,12,15), ] <- dfr[c(5,8,12,15), ] - 4  BW <- dfBW$BW # bandwidth  # application of the function IntrusiveIndex(dfa, dfr, BW) #> [1] \"10 Intrusivity Index is negligible\""},{"path":"/reference/AcousticQuantilePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot acoustic quantile — AcousticQuantilePlot","title":"Plot acoustic quantile — AcousticQuantilePlot","text":"Returns plot acoustic qualtile 1/3 band frequency","code":""},{"path":"/reference/AcousticQuantilePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot acoustic quantile — AcousticQuantilePlot","text":"","code":"AcousticQuantilePlot(df, Cols, Quantile, TimeZone = \"UTC\")"},{"path":"/reference/AcousticQuantilePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot acoustic quantile — AcousticQuantilePlot","text":"df dataframe Cols vector index cols (1/3 band frequency) Quantile quantile, example 0.95 TimeZone Time zone dataset (default UTC)","code":""},{"path":"/reference/AcousticQuantilePlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot acoustic quantile — AcousticQuantilePlot","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/AcousticQuantilePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot acoustic quantile — AcousticQuantilePlot","text":"","code":"# Plot reverse quantile of 1/3 band frequency  library(lubridate) #>  #> Attaching package: ‘lubridate’ #> The following objects are masked from ‘package:base’: #>  #>     date, intersect, setdiff, union  datasetI <- dataset_impulsive1 datasetH <- dfImpulsiveTrasform(datasetI) datasetH$date <- ymd_hms(as.character(datasetH$date))  AcousticQuantilePlot(df = datasetH, Cols =c(3:38), Quantile = 0.95,                      TimeZone = \"UTC\")"},{"path":"/reference/AcousticWeightingTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighting acoustic table — AcousticWeightingTable","title":"Weighting acoustic table — AcousticWeightingTable","text":"Weighting acoustic table","code":""},{"path":"/reference/AcousticWeightingTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Weighting acoustic table — AcousticWeightingTable","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/AcuDNPercentile.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate reverse Percentile for period — AcuDNPercentile","title":"Calculate reverse Percentile for period — AcuDNPercentile","text":"Returns vector acoustic percetile","code":""},{"path":"/reference/AcuDNPercentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate reverse Percentile for period — AcuDNPercentile","text":"","code":"AcuDNPercentile(df, parameter, from, to, period)"},{"path":"/reference/AcuDNPercentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate reverse Percentile for period — AcuDNPercentile","text":"df dataframe Leq data parameter parameter, example \"LAeq\" start hour end hour period period night day","code":""},{"path":"/reference/AcuDNPercentile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate reverse Percentile for period — AcuDNPercentile","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/AcuDNPercentile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate reverse Percentile for period — AcuDNPercentile","text":"","code":"# Calculate reverse quantile of a dataframe by period  data(\"exampleHourlyData\")  AcuDNPercentile(df = exampleHourlyData,                 parameter = \"leq\",                 from = \"5\",                 to = \"22\",                 period = \"night\")[1:5] #> [[1]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.767 72.235 70.940 69.550 51.950 51.420 50.204  #>  #> [[2]] #>     L1     L5    L10    L50    L90    L95    L99  #> 71.448 70.840 70.620 69.850 50.750 48.425 47.285  #>  #> [[3]] #>     L1     L5    L10    L50    L90    L95    L99  #> 71.843 71.615 71.060 69.550 52.250 50.770 48.794  #>  #> [[4]] #>     L1     L5    L10    L50    L90    L95    L99  #> 72.656 72.080 71.280 70.000 52.560 51.350 49.550  #>  #> [[5]] #>     L1     L5    L10    L50    L90    L95    L99  #> 70.770 70.650 70.500 69.600 51.450 49.575 48.795  #>"},{"path":"/reference/AcuPercentile.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate reverse Percentile — AcuPercentile","title":"Calculate reverse Percentile — AcuPercentile","text":"Returns vector acoustic percetile","code":""},{"path":"/reference/AcuPercentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate reverse Percentile — AcuPercentile","text":"","code":"AcuPercentile(x)"},{"path":"/reference/AcuPercentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate reverse Percentile — AcuPercentile","text":"x vector Leq data","code":""},{"path":"/reference/AcuPercentile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate reverse Percentile — AcuPercentile","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/AcuPercentile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate reverse Percentile — AcuPercentile","text":"","code":"# Calculate reverse quantile of a vector of values  #data(PTFA)  AcuPercentile(PTFA$LAeq) #>     L1     L5    L10    L50    L90    L95    L99  #> 53.747 48.600 47.200 44.400 43.100 43.000 42.700"},{"path":"/reference/ExtractIndexMark.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract index and name of markers — ExtractIndexMark","title":"Extract index and name of markers — ExtractIndexMark","text":"Returns list index name","code":""},{"path":"/reference/ExtractIndexMark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract index and name of markers — ExtractIndexMark","text":"","code":"ExtractIndexMark(filemarks, dataset, mp)"},{"path":"/reference/ExtractIndexMark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract index and name of markers — ExtractIndexMark","text":"filemarks dataframe date markers dataset dataframe analysis mp name misure point","code":""},{"path":"/reference/ExtractIndexMark.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract index and name of markers — ExtractIndexMark","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/ExtractIndexMark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract index and name of markers — ExtractIndexMark","text":"","code":"#data(PTFA) #data(\"markers\")  ExtractIndexMark(filemarks = markers , dataset = PTFA, mp = \"PTFA\") #> $index1 #>   [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18 #>  [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36 #>  [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54 #>  [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72 #>  [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 #>  [91]  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 #> [109] 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 #> [127] 127 128 129 130 131 132 133 134 135 136 137 138 139 140 #>  #> $index2 #>  [1] 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 #> [20] 526 527 528 529 530 531 532 533 #>  #> $index3 #>  [1] 1627 1628 1629 1630 1631 1632 1633 1634 1635 1636 1637 1638 1639 1640 1641 #> [16] 1642 1643 1644 1645 1646 1647 1648 1649 1650 1651 1652 #>  #> $name1 #>   [1] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>   [8] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [15] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [22] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [29] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [36] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [43] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [50] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [57] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [64] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [71] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [78] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [85] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [92] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [99] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #> [106] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #> [113] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #> [120] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #> [127] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #> [134] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  #> $name2 #>  [1] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [8] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #> [15] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #> [22] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  #> $name3 #>  [1] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>  [8] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #> [15] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #> [22] \"escludi\" \"escludi\" \"escludi\" \"escludi\" \"escludi\" #>"},{"path":"/reference/HolidaysDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Holidays date (Gregorian calendar) — HolidaysDate","title":"Calculate Holidays date (Gregorian calendar) — HolidaysDate","text":"Returns vector holiday dates (Gregorian calendar)","code":""},{"path":"/reference/HolidaysDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Holidays date (Gregorian calendar) — HolidaysDate","text":"","code":"HolidaysDate(year_holiday)"},{"path":"/reference/HolidaysDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Holidays date (Gregorian calendar) — HolidaysDate","text":"year_holiday year example \"2022\" like character","code":""},{"path":"/reference/HolidaysDate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Holidays date (Gregorian calendar) — HolidaysDate","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/HolidaysDate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Holidays date (Gregorian calendar) — HolidaysDate","text":"","code":"HolidaysDate(2022) #> [1] \"2022-01-01\" \"2022-01-06\" \"2022-04-25\" \"2022-05-01\" \"2022-06-02\" #> [6] \"2022-08-15\" \"2022-11-01\" \"2022-04-17\" \"2022-04-18\""},{"path":"/reference/HourlyEmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate hourly energetic mean — HourlyEmean","title":"Calculate hourly energetic mean — HourlyEmean","text":"Returns dataframe hourly energetic mean","code":""},{"path":"/reference/HourlyEmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate hourly energetic mean — HourlyEmean","text":"","code":"HourlyEmean(df, variable, timeZone = \"Europe/Rome\")"},{"path":"/reference/HourlyEmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate hourly energetic mean — HourlyEmean","text":"df dataframe date (Y-m-d H:M:S) variables variable variable name timeZone time zone defoult Europe/Rome","code":""},{"path":"/reference/HourlyEmean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate hourly energetic mean — HourlyEmean","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/HourlyEmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate hourly energetic mean — HourlyEmean","text":"","code":"#data(PTFA)  HourlyEmean(df = PTFA, variable = \"LAeq\") #>            date LAeq #> 1 2022-03-07 10 45.7"},{"path":"/reference/IntrusiveIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Intrusive Index (UNI/TS 11844 march 2022) — IntrusiveIndex","title":"Calculate Intrusive Index (UNI/TS 11844 march 2022) — IntrusiveIndex","text":"Returns number","code":""},{"path":"/reference/IntrusiveIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Intrusive Index (UNI/TS 11844 march 2022) — IntrusiveIndex","text":"","code":"IntrusiveIndex(dfa, dfr, BW)"},{"path":"/reference/IntrusiveIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Intrusive Index (UNI/TS 11844 march 2022) — IntrusiveIndex","text":"dfa dataframe Lfa (enviromental sound levels) 1/3 octave specta data dfr dataframe Lfr (residual sound levels) 1/3 octave specta data BW vector 1/3 octave bandwidth data","code":""},{"path":"/reference/IntrusiveIndex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Intrusive Index (UNI/TS 11844 march 2022) — IntrusiveIndex","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/IntrusiveIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Intrusive Index (UNI/TS 11844 march 2022) — IntrusiveIndex","text":"","code":"# Calculation of the intrusiveness index  library(OpeNoise) library(lubridate)  data(\"dataset_impulsive1\") data(\"dfBW\")  # dataset handling df_Imp_sec <- dfImpulsiveTrasform(dataset_impulsive1,                                   statistic = energetic.mean) df_Imp_sec$date <- ymd_hms(df_Imp_sec$date, tz = \"Europe/Rome\")  # extraction of frequency bands from the dataset freqDF <- df_Imp_sec[, grep(\"LZeq\\\\.\", names(df_Imp_sec))]  ################################################################################  #                  INTRUSIVENESS INDEX CALCULATION FUNCTION  ################################################################################ dfa <- freqDF # Environmental dataset simulation dfr <- freqDF  # Residual dataset simulation by subtracting 4 from dfa dfr[c(5,8,12,15), ] <- dfr[c(5,8,12,15), ] - 4  BW <- dfBW$BW # bandwidth  # application of the function IntrusiveIndex(dfa, dfr, BW) #> [1] \"10 Intrusivity Index is negligible\""},{"path":"/reference/LdenCalculator.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate daily or total Lden — LdenCalculator","title":"Calculate daily or total Lden — LdenCalculator","text":"Returns dataframe Lden","code":""},{"path":"/reference/LdenCalculator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate daily or total Lden — LdenCalculator","text":"","code":"LdenCalculator(dataframe, variable, type = \"daily\", ...)"},{"path":"/reference/LdenCalculator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate daily or total Lden — LdenCalculator","text":"dataframe dataframe variable name variable type \"daily\" \"total\" ... another arguments","code":""},{"path":"/reference/LdenCalculator.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate daily or total Lden — LdenCalculator","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/LdenCalculator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate daily or total Lden — LdenCalculator","text":"","code":"#data(\"exampleHourlyData\")  LdenCalculator(dataframe = exampleHourlyData, variable = \"leq\",                type = \"daily\") #> # A tibble: 81 × 6 #>    date       D_acu     D     E     N  Lden #>    <fct>      <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 2020-12-11  69.9  70.4  66    NA    NA   #>  2 2020-12-12  69.4  69.7  65.6  56.1  68.9 #>  3 2020-12-13  69    69.3  65.4  54.9  68.4 #>  4 2020-12-14  69.6  70    64.9  56.5  69.1 #>  5 2020-12-15  69.7  70.1  65.1  56.5  69.2 #>  6 2020-12-16  70.3  70.7  65.4  56.9  69.7 #>  7 2020-12-17  70.1  70.5  65.9  57.4  69.7 #>  8 2020-12-18  69.6  69.8  66.7  57.2  69.3 #>  9 2020-12-19  69.1  69.4  66.1  56.6  68.9 #> 10 2020-12-20  69.2  69.5  66.5  54.7  68.7 #> # ℹ 71 more rows  LdenCalculator(dataframe = exampleHourlyData, variable = \"leq\",                type = \"total\") #> # A tibble: 1 × 4 #>       D     E     N  Lden #>   <dbl> <dbl> <dbl> <dbl> #> 1  69.8  66.3  57.6  69.4"},{"path":"/reference/Maskapply.html","id":null,"dir":"Reference","previous_headings":"","what":"Add index and name of markers in misure dataframe — Maskapply","title":"Add index and name of markers in misure dataframe — Maskapply","text":"Returns dataframe","code":""},{"path":"/reference/Maskapply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add index and name of markers in misure dataframe — Maskapply","text":"","code":"Maskapply(filemarks, dataset, mp)"},{"path":"/reference/Maskapply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add index and name of markers in misure dataframe — Maskapply","text":"filemarks dataframe date markers dataset dataframe analysis mp name misure point","code":""},{"path":"/reference/Maskapply.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add index and name of markers in misure dataframe — Maskapply","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/Maskapply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add index and name of markers in misure dataframe — Maskapply","text":"","code":"#data(PTFA) #data(markers)  Maskapply(filemarks = markers, dataset = PTFA, mp = \"PTFA\")[1:10, c(1, 2, 45)] #>                   date LAeq  marker #> 2  2022-03-07 10:12:16 43.9 escludi #> 3  2022-03-07 10:12:17 44.6 escludi #> 4  2022-03-07 10:12:18 44.5 escludi #> 5  2022-03-07 10:12:19 43.9 escludi #> 6  2022-03-07 10:12:20 45.0 escludi #> 7  2022-03-07 10:12:21 44.3 escludi #> 8  2022-03-07 10:12:22 43.4 escludi #> 9  2022-03-07 10:12:23 44.0 escludi #> 10 2022-03-07 10:12:24 44.1 escludi #> 11 2022-03-07 10:12:25 44.5 escludi"},{"path":"/reference/P1FA.html","id":null,"dir":"Reference","previous_headings":"","what":"Noise data of misure in house open window condition — P1FA","title":"Noise data of misure in house open window condition — P1FA","text":"Noise data misure house open window condition","code":""},{"path":"/reference/P1FA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Noise data of misure in house open window condition — P1FA","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/P1FC.html","id":null,"dir":"Reference","previous_headings":"","what":"Noise data of misure in house close window condition — P1FC","title":"Noise data of misure in house close window condition — P1FC","text":"Noise data misure house close window condition","code":""},{"path":"/reference/P1FC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Noise data of misure in house close window condition — P1FC","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/PTFA.html","id":null,"dir":"Reference","previous_headings":"","what":"Noise data of misure in house open window condition — PTFA","title":"Noise data of misure in house open window condition — PTFA","text":"Noise data misure house open window condition","code":""},{"path":"/reference/PTFA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Noise data of misure in house open window condition — PTFA","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/PTFC.html","id":null,"dir":"Reference","previous_headings":"","what":"Noise data of misure in house close window condition — PTFC","title":"Noise data of misure in house close window condition — PTFC","text":"Noise data misure house close window condition","code":""},{"path":"/reference/PTFC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Noise data of misure in house close window condition — PTFC","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/PlotNoiseTHcompare.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot time histrory and compare frequency components — PlotNoiseTHcompare","title":"Plot time histrory and compare frequency components — PlotNoiseTHcompare","text":"Returns plot","code":""},{"path":"/reference/PlotNoiseTHcompare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot time histrory and compare frequency components — PlotNoiseTHcompare","text":"","code":"PlotNoiseTHcompare(   df,   variable,   listvar = NULL,   mp,   runleq = TRUE,   y_lim = c(20, 80) )"},{"path":"/reference/PlotNoiseTHcompare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot time histrory and compare frequency components — PlotNoiseTHcompare","text":"df dataframe variable Leq another variable plot first listvar names frequency component want compare mp misure point runleq logical value plot running leq line y_lim y axe range","code":""},{"path":"/reference/PlotNoiseTHcompare.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot time histrory and compare frequency components — PlotNoiseTHcompare","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/PlotNoiseTHcompare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot time histrory and compare frequency components — PlotNoiseTHcompare","text":"","code":"#data(P1FA)  PlotNoiseTHcompare(df = P1FA ,                    variable = \"LAeq\",                    listvar = c(\"LZFmin.100\",                                \"LZFmin.250\"), mp = \"P1FA\",                    runleq = TRUE,                    y_lim = c(30, 70))"},{"path":"/reference/PlotNoiseTimeHistory.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot time history of noise misure with marker and running Leq — PlotNoiseTimeHistory","title":"Plot time history of noise misure with marker and running Leq — PlotNoiseTimeHistory","text":"Returns time history plot","code":""},{"path":"/reference/PlotNoiseTimeHistory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot time history of noise misure with marker and running Leq — PlotNoiseTimeHistory","text":"","code":"PlotNoiseTimeHistory(   df = NULL,   variable = NULL,   filemarks = NULL,   escl_marks = NULL,   mp,   y_lim = c(20, 80) )"},{"path":"/reference/PlotNoiseTimeHistory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot time history of noise misure with marker and running Leq — PlotNoiseTimeHistory","text":"df dataframe date, leq markers variable string name column want plot filemarks dataframe date markers escl_marks mark want esclude plot mp name misure point y_lim y axes range","code":""},{"path":"/reference/PlotNoiseTimeHistory.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot time history of noise misure with marker and running Leq — PlotNoiseTimeHistory","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/PlotNoiseTimeHistory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot time history of noise misure with marker and running Leq — PlotNoiseTimeHistory","text":"","code":"#data(P1FA) #data(markers)  PlotNoiseTimeHistory(df = P1FA, variable = \"LAeq\", mp = \"P1FA\", y_lim = c(40, 65))   PlotNoiseTimeHistory(df = P1FA, variable = \"LAeq\", mp = \"P1FA\",                      filemarks = markers, y_lim = c(40, 65))   PlotNoiseTimeHistory(df = P1FA, variable = \"LAeq\", mp = \"P1FA\", escl_marks = \"escludi\",                      y_lim = c(40, 65))"},{"path":"/reference/PlotSpectrogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spectrogram — PlotSpectrogram","title":"Plot spectrogram — PlotSpectrogram","text":"Returns spectrogram","code":""},{"path":"/reference/PlotSpectrogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spectrogram — PlotSpectrogram","text":"","code":"PlotSpectrogram(df, coLs, plot_title = NULL)"},{"path":"/reference/PlotSpectrogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spectrogram — PlotSpectrogram","text":"df dataframe coLs cols index plot plot_title title plot","code":""},{"path":"/reference/PlotSpectrogram.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot spectrogram — PlotSpectrogram","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/PlotSpectrogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spectrogram — PlotSpectrogram","text":"","code":"#data(P1FA)  PlotSpectrogram(df = P1FA, coLs = c(3:38) , plot_title = \"Spettrogram LZFmin\")"},{"path":"/reference/RoundTo.html","id":null,"dir":"Reference","previous_headings":"","what":"Round to Multiple — RoundTo","title":"Round to Multiple — RoundTo","text":"Returns number rounded nearest specified multiple.","code":""},{"path":"/reference/RoundTo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round to Multiple — RoundTo","text":"","code":"RoundTo(x, multiple = 1, FUN = round)"},{"path":"/reference/RoundTo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round to Multiple — RoundTo","text":"x vector value decibel (dB) multiple vector time seconds FUN rounding function character expression. Can one trunc, ceiling, round (default) floor.","code":""},{"path":"/reference/RoundTo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Round to Multiple — RoundTo","text":"Andri Signorell andri@signorell.net","code":""},{"path":"/reference/RoundTo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round to Multiple — RoundTo","text":"","code":"#data(\"P1FA\")  RoundTo(x = P1FA$LAeq, multiple = 0.5)[1:10] #>  [1] 58.0 52.0 47.0 47.0 47.0 47.5 48.0 47.0 48.5 51.0"},{"path":"/reference/SELcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate SEL (Single Event Level) — SELcalc","title":"Calculate SEL (Single Event Level) — SELcalc","text":"Returns SEL","code":""},{"path":"/reference/SELcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate SEL (Single Event Level) — SELcalc","text":"","code":"SELcalc(x, t)"},{"path":"/reference/SELcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate SEL (Single Event Level) — SELcalc","text":"x value dB t period second","code":""},{"path":"/reference/SELcalc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate SEL (Single Event Level) — SELcalc","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/SELcalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate SEL (Single Event Level) — SELcalc","text":"","code":"# Calculate SEL (Single Event Level)  SELcalc(x = 66.8, t = 938) #> [1] 96.52203"},{"path":"/reference/avr.day.night.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate daily and nightly energetic mean period — avr.day.night","title":"Calculate daily and nightly energetic mean period — avr.day.night","text":"Returns dataframe energetic mean","code":""},{"path":"/reference/avr.day.night.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate daily and nightly energetic mean period — avr.day.night","text":"","code":"avr.day.night(x, variable, period = \"day\", stat = \"n_mean\", ...)"},{"path":"/reference/avr.day.night.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate daily and nightly energetic mean period — avr.day.night","text":"x data frame variable variable apply function period \"day\" \"night\" stat \"n_mean\" \"e_mean\" like mean energetic mean ... another arguments","code":""},{"path":"/reference/avr.day.night.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate daily and nightly energetic mean period — avr.day.night","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/avr.day.night.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate daily and nightly energetic mean period — avr.day.night","text":"","code":"# Calculate energetic mean in nightly period (22-06)  #data(exampleHourlyData)  avr.day.night(exampleHourlyData, \"leq\", period = \"night\",               stat = \"e_mean\")[1:5, ] #>         DATA MEAN  MIN  MAX #> 1 2020-12-11 56.1 46.9 60.3 #> 2 2020-12-12 54.9 46.5 60.0 #> 3 2020-12-13 56.5 46.3 61.5 #> 4 2020-12-14 56.5 48.4 61.3 #> 5 2020-12-15 56.9 48.6 62.4  # Calculate energetic mean in daily period (06-22) avr.day.night(exampleHourlyData, \"leq\", period = \"day\",               stat = \"e_mean\")[1:5, ] #>         DATA MEAN  MIN  MAX #> 1 2020-12-11 69.9   NA   NA #> 2 2020-12-12 69.4 63.4 72.6 #> 3 2020-12-13 69.0 60.2 72.1 #> 4 2020-12-14 69.6 64.1 73.2 #> 5 2020-12-15 69.7 64.2 72.9  # Calculate mean in daily period (06-22) avr.day.night(exampleHourlyData, \"leq\", period = \"day\",               stat = \"n_mean\")[1:5, ] #>         DATA  MEAN  MIN  MAX   SD #> 1 2020-12-11 69.54   NA   NA   NA #> 2 2020-12-12 68.79 63.4 72.6 2.49 #> 3 2020-12-13 68.17 60.2 72.1 3.13 #> 4 2020-12-14 69.06 64.1 73.2 2.38 #> 5 2020-12-15 69.14 64.2 72.9 2.43"},{"path":"/reference/dataset_impulsive1.html","id":null,"dir":"Reference","previous_headings":"","what":"Noise dataset of impulsive event (100 ms acquisition time) — dataset_impulsive1","title":"Noise dataset of impulsive event (100 ms acquisition time) — dataset_impulsive1","text":"Noise dataset impulsive event (100 ms acquisition time)","code":""},{"path":"/reference/dataset_impulsive1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Noise dataset of impulsive event (100 ms acquisition time) — dataset_impulsive1","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/dataset_impulsive2.html","id":null,"dir":"Reference","previous_headings":"","what":"Noise dataset of impulsive event (100 ms acquisition time) — dataset_impulsive2","title":"Noise dataset of impulsive event (100 ms acquisition time) — dataset_impulsive2","text":"Noise dataset impulsive event (100 ms acquisition time)","code":""},{"path":"/reference/dataset_impulsive2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Noise dataset of impulsive event (100 ms acquisition time) — dataset_impulsive2","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/dbsum.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate energetic sum or difference of values — dbsum","title":"Calculate energetic sum or difference of values — dbsum","text":"Returns energetic sum difference values","code":""},{"path":"/reference/dbsum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate energetic sum or difference of values — dbsum","text":"","code":"dbsum(x, y, operator)"},{"path":"/reference/dbsum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate energetic sum or difference of values — dbsum","text":"x first value vector y second value vector operator 1 sum -1 difference","code":""},{"path":"/reference/dbsum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate energetic sum or difference of values — dbsum","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/dbsum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate energetic sum or difference of values — dbsum","text":"","code":"# Calculate energetic sum or difference of values  dbsum(x = 55, y = 33, operator = 1) #> [1] 55.02732 dbsum(x = c(55 , 66), y = c(45, 50), operator = 1) #> [1] 55.41393 66.10774  dbsum(x = c(70 , 68), y = c(55, 66), operator = -1) #> [1] 69.86045 63.67077"},{"path":"/reference/deco.time.html","id":null,"dir":"Reference","previous_headings":"","what":"Time decomposition — deco.time","title":"Time decomposition — deco.time","text":"Trasform time hours, minutes seconds seconds","code":""},{"path":"/reference/deco.time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time decomposition — deco.time","text":"","code":"deco.time(x, y, z)"},{"path":"/reference/deco.time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time decomposition — deco.time","text":"x hours y minutes z seconds","code":""},{"path":"/reference/deco.time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time decomposition — deco.time","text":"time decomposition seconds","code":""},{"path":"/reference/deco.time.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Time decomposition — deco.time","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/deco.time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time decomposition — deco.time","text":"","code":"# Convert H:M:S to seconds x = 5  # Hours y = 25 # minutes z = 50 # seconds  deco.time(x = x, y = y, z = z) #> [1] \"Time decomposition from hours, minutes and seconds to seconds:\" #> [1] 19550"},{"path":"/reference/dfBW.html","id":null,"dir":"Reference","previous_headings":"","what":"Table's 1/3 octave bandwidth — dfBW","title":"Table's 1/3 octave bandwidth — dfBW","text":"Table's 1/3 octave bandwidth","code":""},{"path":"/reference/dfBW.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Table's 1/3 octave bandwidth — dfBW","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/dfImpulsiveTrasform.html","id":null,"dir":"Reference","previous_headings":"","what":"Trasform impulsive dataframe (100 ms samples) in dataframe (1s samples) — dfImpulsiveTrasform","title":"Trasform impulsive dataframe (100 ms samples) in dataframe (1s samples) — dfImpulsiveTrasform","text":"Returns dataframe (1s samples)","code":""},{"path":"/reference/dfImpulsiveTrasform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trasform impulsive dataframe (100 ms samples) in dataframe (1s samples) — dfImpulsiveTrasform","text":"","code":"dfImpulsiveTrasform(dfImpulsive, statistic = energetic.mean)"},{"path":"/reference/dfImpulsiveTrasform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trasform impulsive dataframe (100 ms samples) in dataframe (1s samples) — dfImpulsiveTrasform","text":"dfImpulsive dataframe impulse statistic energetic mean (default)","code":""},{"path":"/reference/dfImpulsiveTrasform.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trasform impulsive dataframe (100 ms samples) in dataframe (1s samples) — dfImpulsiveTrasform","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/dfImpulsiveTrasform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trasform impulsive dataframe (100 ms samples) in dataframe (1s samples) — dfImpulsiveTrasform","text":"","code":"#data(\"dataset_impulsive1\") #data(\"dataset_impulsive2\")  dfImpulsiveTrasform(dfImpulsive = dataset_impulsive1,                     statistic = energetic.mean)[1:5, ] #>                    date LAeq LZeq.6.3 LZeq.8.0 LZeq.10.0 LZeq.12.5 LZeq.16.0 #> 1 2022-04-28 09:04:35.7 33.5     35.9     11.3      37.9      40.9      42.1 #> 2 2022-04-28 09:04:35.8 32.5     34.0     29.5      35.8      44.6      39.6 #> 3 2022-04-28 09:04:35.9 37.9     33.0     33.6      36.9      47.1      34.0 #> 4   2022-04-28 09:04:36 38.5     31.5     33.3      40.2      47.3      32.1 #> 5 2022-04-28 09:04:36.1 39.4     32.2     32.3      41.4      46.3      37.9 #>   LZeq.20.0 LZeq.25.0 LZeq.31.5 LZeq.40.0 LZeq.50.0 LZeq.63.0 LZeq.80.0 #> 1      35.0      36.2      34.1      36.1      33.4      30.5      26.5 #> 2      37.7      36.1      37.6      32.2      33.5      35.6      31.4 #> 3      40.0      41.7      36.8      38.9      35.8      36.1      25.7 #> 4      40.4      43.3      39.8      36.9      34.2      27.1      32.0 #> 5      38.6      42.6      31.6      33.8      36.3      31.6      31.4 #>   LZeq.100 LZeq.125 LZeq.160 LZeq.200 LZeq.250 LZeq.315 LZeq.400 LZeq.500 #> 1     45.5     28.1     23.3     19.2     20.7     25.1     19.2     18.5 #> 2     45.4     24.3     25.5     18.4     21.0     25.2     21.8     19.0 #> 3     45.7     23.7     25.6     20.5     15.6     21.0     25.7     23.1 #> 4     46.0     33.8     24.2     17.8     17.4     24.4     26.1     25.8 #> 5     45.7     23.8     20.7     20.1     26.1     34.4     31.7     26.9 #>   LZeq.630 LZeq.800 LZeq.1000 LZeq.1250 LZeq.1600 LZeq.2000 LZeq.2500 LZeq.3150 #> 1     22.8     18.4      19.0      16.7      19.3      23.0      21.6      20.4 #> 2     20.1     16.2      15.3      14.7      18.3      20.9      20.1      23.0 #> 3     25.1     19.7      15.1      17.7      14.1      13.8      15.3      14.6 #> 4     31.9     30.1      33.2      29.4      30.4      26.0      29.1      27.9 #> 5     28.5     25.7      24.7      19.3      19.6      17.6      19.3      17.6 #>   LZeq.4000 LZeq.5000 LZeq.6300 LZeq.8000 LZeq.10000 LZeq.12500 LZeq.16000 #> 1      17.5      16.8      14.7      14.4       14.9       13.9       12.9 #> 2      18.0      15.7      14.7      13.9       11.2       11.5        8.8 #> 3      13.1      12.2      11.9      10.9       10.9        9.9        8.7 #> 4      23.1      19.3      18.3      17.4       17.8       19.7       12.9 #> 5      14.8      15.4      17.0      15.6       15.2       13.5       10.3 #>   LZeq.20000 LZFmin.6.3 LZFmin.8.0 LZFmin.10.0 LZFmin.12.5 LZFmin.16.0 #> 1        7.8       35.7       11.3        38.1        35.2        42.1 #> 2        5.6       34.8       11.3        37.0        40.8        40.8 #> 3        5.0       33.9       28.2        36.9        43.6        38.1 #> 4        6.9       32.8       31.9        37.0        45.8        36.0 #> 5        6.3       32.5       32.4        39.2        46.4        35.7 #>   LZFmin.20.0 LZFmin.25.0 LZFmin.31.5 LZFmin.40.0 LZFmin.50.0 LZFmin.63.0 #> 1        34.4        35.7        34.3        32.8        33.0        30.9 #> 2        34.3        35.7        33.6        32.2        32.6        31.7 #> 3        37.2        36.7        36.2        33.3        33.9        34.9 #> 4        39.1        40.4        37.0        36.8        34.2        32.4 #> 5        39.1        42.1        36.0        35.4        33.9        31.8 #>   LZFmin.80.0 LZFmin.100 LZFmin.125 LZFmin.160 LZFmin.200 LZFmin.250 LZFmin.315 #> 1        24.5       45.2       27.1       16.8       18.0       14.9       18.4 #> 2        25.5       45.2       26.4       22.6       21.2       17.0       24.7 #> 3        27.7       45.5       24.7       23.3       20.5       17.6       23.2 #> 4        27.7       45.5       26.2       24.7       19.2       16.9       23.1 #> 5        31.0       45.6       28.7       23.2       19.1       17.9       23.1 #>   LZFmin.400 LZFmin.500 LZFmin.630 LZFmin.800 LZFmin.1000 LZFmin.1250 #> 1       17.9       18.8       21.9       12.4        13.8        17.4 #> 2       19.6       19.0       20.7       15.6        16.4        17.2 #> 3       19.6       18.3       20.3       15.3        15.4        17.2 #> 4       25.1       21.2       22.8       17.3        15.0        16.7 #> 5       28.9       25.1       29.3       26.7        28.0        24.0 #>   LZFmin.1600 LZFmin.2000 LZFmin.2500 LZFmin.3150 LZFmin.4000 LZFmin.5000 #> 1        16.4        14.9        13.5        13.3        13.0        12.2 #> 2        20.4        20.7        19.6        20.9        16.9        15.5 #> 3        18.1        18.3        17.8        18.5        15.2        14.1 #> 4        17.9        18.1        18.6        24.5        19.8        16.5 #> 5        24.6        21.0        23.3        22.0        18.0        16.1 #>   LZFmin.6300 LZFmin.8000 LZFmin.10000 LZFmin.12500 LZFmin.16000 LZFmin.20000 #> 1        11.2        10.7         10.0          9.7          7.8          5.1 #> 2        14.2        13.4         12.8         12.1         10.3          6.3 #> 3        13.2        12.2         11.7         10.9          9.2          5.7 #> 4        13.6        14.0         14.8         15.8         11.2          6.0 #> 5        15.1        14.5         14.8         15.2         10.4          6.0"},{"path":"/reference/energetic.mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithmic mean — energetic.mean","title":"Logarithmic mean — energetic.mean","text":"Calculate logarithmic mean","code":""},{"path":"/reference/energetic.mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithmic mean — energetic.mean","text":"","code":"energetic.mean(x)"},{"path":"/reference/energetic.mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithmic mean — energetic.mean","text":"x vector value decibel (dB)","code":""},{"path":"/reference/energetic.mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithmic mean — energetic.mean","text":"logarithmic mean","code":""},{"path":"/reference/energetic.mean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logarithmic mean — energetic.mean","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/energetic.mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logarithmic mean — energetic.mean","text":"","code":"# Calculate energetic mean of vector's values of Leq energetic.mean(c(55, 88, 66, 51, 70)) #> [1] 81.1"},{"path":"/reference/energetic.min.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that calculate min value — energetic.min","title":"Function that calculate min value — energetic.min","text":"calculate min value","code":""},{"path":"/reference/energetic.min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that calculate min value — energetic.min","text":"","code":"energetic.min(y)"},{"path":"/reference/energetic.min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that calculate min value — energetic.min","text":"y numeric vector","code":""},{"path":"/reference/energetic.min.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function that calculate min value — energetic.min","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/energetic_w.mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Weigth logaritmic mean — energetic_w.mean","title":"Weigth logaritmic mean — energetic_w.mean","text":"Calculate weigth logarithmic mean respect time","code":""},{"path":"/reference/energetic_w.mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weigth logaritmic mean — energetic_w.mean","text":"","code":"energetic_w.mean(x, t)"},{"path":"/reference/energetic_w.mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weigth logaritmic mean — energetic_w.mean","text":"x vector value decibel (dB) t vector time string \"HH:MM:SS\"","code":""},{"path":"/reference/energetic_w.mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weigth logaritmic mean — energetic_w.mean","text":"weigth logarithmic mean  respect time","code":""},{"path":"/reference/energetic_w.mean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Weigth logaritmic mean — energetic_w.mean","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/energetic_w.mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weigth logaritmic mean — energetic_w.mean","text":"","code":"# Calculate weight energetic mean energetic_w.mean(x = c(55.0, 70.0) , t = c(\"03:55:22\", \"01:33:12\")) #> [1] 64.9"},{"path":"/reference/exampleHourlyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Noise hourly data of misure in environmental open space — exampleHourlyData","title":"Noise hourly data of misure in environmental open space — exampleHourlyData","text":"Noise hourly data misure environmental open space","code":""},{"path":"/reference/exampleHourlyData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Noise hourly data of misure in environmental open space — exampleHourlyData","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters table of equal loudness curve A (ISO 226:1987 “Acoustics -- Normal equal-loudness-level contours”) — iso","title":"Parameters table of equal loudness curve A (ISO 226:1987 “Acoustics -- Normal equal-loudness-level contours”) — iso","text":"Parameters table equal loudness curve (ISO 226:1987 “Acoustics -- Normal equal-loudness-level contours”)","code":""},{"path":"/reference/iso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parameters table of equal loudness curve A (ISO 226:1987 “Acoustics -- Normal equal-loudness-level contours”) — iso","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset with markers — markers","title":"Dataset with markers — markers","text":"Dataset markers","code":""},{"path":"/reference/markers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dataset with markers — markers","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/runningLeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate running Leq — runningLeq","title":"Calculate running Leq — runningLeq","text":"Returns vector energetic mean Leq......","code":""},{"path":"/reference/runningLeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate running Leq — runningLeq","text":"","code":"runningLeq(x)"},{"path":"/reference/runningLeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate running Leq — runningLeq","text":"x vector value decibel (dB)","code":""},{"path":"/reference/runningLeq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate running Leq — runningLeq","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/runningLeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate running Leq — runningLeq","text":"","code":"#data(\"P1FA\")  runningLeq(x = P1FA$LAeq)[1:10] #>  [1] 58.0 56.0 54.5 53.5 52.8 52.2 51.8 51.4 51.2 51.2"},{"path":"/reference/search.tone.html","id":null,"dir":"Reference","previous_headings":"","what":"Function research pure tone — search.tone","title":"Function research pure tone — search.tone","text":"research pure tone","code":""},{"path":"/reference/search.tone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function research pure tone — search.tone","text":"","code":"search.tone(x, statistic = energetic.mean, plot.tone = FALSE)"},{"path":"/reference/search.tone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function research pure tone — search.tone","text":"x dataframe llfmin... statistic statistic used default energetic.mean plot.tone logic argument default false plot result","code":""},{"path":"/reference/search.tone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function research pure tone — search.tone","text":"plot 1/3 octave frequency isofonic curve (ISO 226:1987)","code":""},{"path":"/reference/search.tone.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function research pure tone — search.tone","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/search.tone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function research pure tone — search.tone","text":"","code":"# Search pure tone from PTFA dataset # dataframe have to contain date and LLfmin (minor value of Linear level frequency) search.tone(PTFA[, c(3:38)], plot.tone = FALSE) #> [1] \"Tone frequency: NA\" \"Tone level: NA\"     \"Isophonic: NA\"       # Plot result search.tone(PTFA[, c(3:38)], plot.tone = TRUE) #> Warning: Removed 7 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"/reference/searchImpulse.html","id":null,"dir":"Reference","previous_headings":"","what":"Search impulsive event — searchImpulse","title":"Search impulsive event — searchImpulse","text":"Returns list dataframe peaks impulsive plot","code":""},{"path":"/reference/searchImpulse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search impulsive event — searchImpulse","text":"","code":"searchImpulse(df, cri1 = 6, cri2 = -10, Threshold = 30)"},{"path":"/reference/searchImpulse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search impulsive event — searchImpulse","text":"df impulse dataframe, samples 100 ms cri1 first criteria 6dB (LAImax - LASmax > 6dB) cri2 second criteria -10dB ((LAFmax - 10dB) < 1s) Threshold minimun level detect peaks","code":""},{"path":"/reference/searchImpulse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search impulsive event — searchImpulse","text":"Pasquale Scordino p.scordino@arpa.piemonte.Simone Sperotto s.sperotto@arpa.piemonte.","code":""},{"path":"/reference/searchImpulse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search impulsive event — searchImpulse","text":"","code":"#data(\"dataset_impulsive1\") #data(\"dataset_impulsive2\")  searchImpulse(df = dataset_impulsive1) #> $Plot  #>  #> $dfPeaks #>   ymax xmax startPeak stopPeak                date cri1 cri2 #> 1 95.2 3166      3164     3189 2022-04-28 09:09:52    y    5 #> 2 93.1 2567      2566     2586 2022-04-28 09:08:52    y    5 #> 3 92.4  780       778      801 2022-04-28 09:05:53    y    4 #> 4 90.5 2053      2050     2076 2022-04-28 09:08:00    y    4 #> 5 89.8 1505      1503     1524 2022-04-28 09:07:06    y    4 #> 6 86.2 3043      3042     3056 2022-04-28 09:09:39    y    4 #> 7 84.9 3128      3127     3146 2022-04-28 09:09:48    y    5 #>  searchImpulse(df = dataset_impulsive2) #> $Plot  #>  #> $dfPeaks #>    ymax xmax startPeak stopPeak                date cri1 cri2 #> 1  97.2 2795      2794     2818 2022-05-06 14:30:54    y    5 #> 2  96.3 2595      2594     2622 2022-05-06 14:30:34    y    5 #> 3  96.1 1570      1564     1591 2022-05-06 14:28:51    y    4 #> 4  91.1 1978      1977     2000 2022-05-06 14:29:32    y    5 #> 5  91.0 1773      1771     1794 2022-05-06 14:29:11    y    5 #> 6  90.9 2401      2397     2420 2022-05-06 14:30:14    y    4 #> 7  90.2 1159      1158     1183 2022-05-06 14:28:10    y    5 #> 8  90.2 1389      1387     1410 2022-05-06 14:28:33    y    5 #> 9  88.8 2198      2197     2218 2022-05-06 14:29:54    y    4 #> 10 86.7  939       936      959 2022-05-06 14:27:48    y    5 #>"},{"path":[]},{"path":"/news/index.html","id":"new-features-0-2-17","dir":"Changelog","previous_headings":"","what":"New features","title":"OpeNoise 0.2-17 (development version)","text":"add new documentations add new examples","code":""},{"path":"/news/index.html","id":"bug-fixed-0-2-17","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"OpeNoise 0.2-17 (development version)","text":"Fix bugs PlotNoiseTimeHistory function","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-2-16","dir":"Changelog","previous_headings":"","what":"New features","title":"OpeNoise 0.2-16","text":"Add AcuDNPercentile function","code":""},{"path":"/news/index.html","id":"bug-fixed-0-2-16","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"OpeNoise 0.2-16","text":"Fix bugs avg.day.night function","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-2-15","dir":"Changelog","previous_headings":"","what":"New features","title":"OpeNoise 0.2-15","text":"Add dbSum function Add SELcalc function Update vignette","code":""},{"path":"/news/index.html","id":"bug-fixed-0-2-15","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"OpeNoise 0.2-15","text":"Fix bugs AcousticQuantilePlot function","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-2-13","dir":"Changelog","previous_headings":"","what":"New features","title":"OpeNoise 0.2-13","text":"Add new function AcousticQuantilePlot Add data AcousticWeightingTable","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-2-12","dir":"Changelog","previous_headings":"","what":"New features","title":"OpeNoise 0.2-12","text":"Add new colour/aspect PlotSpectogram function Add na.omit HourlyEmean function search.tone function modified (time indipendent) Add qualitative flag IntrusivityIndex function Add new column “BWn” (letterature values) table dfBW","code":""},{"path":"/news/index.html","id":"bug-fixed-0-2-12","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"OpeNoise 0.2-12","text":"Correct bugs LdenCalculator function","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-2-11","dir":"Changelog","previous_headings":"","what":"New features","title":"OpeNoise 0.2-11","text":"Add argument dataset ExtractIndex MarkApply function Shiny application","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-2-10","dir":"Changelog","previous_headings":"","what":"New features","title":"OpeNoise 0.2-10","text":"Add argument timeZone HourlyEmean","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-2-9","dir":"Changelog","previous_headings":"","what":"New features","title":"OpeNoise 0.2-9","text":"Changed library name AcousticCalc OpeNoise Added function searchImpulse Added function dfImpulsiveTransform Added function IntrusiveIndex","code":""},{"path":"/news/index.html","id":"bug-fixed-0-2-9","dir":"Changelog","previous_headings":"","what":"Bug fixed","title":"OpeNoise 0.2-9","text":"fixed bug search.tone function fixed several minor bug","code":""}]
